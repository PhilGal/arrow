#.instances: fill=#B9F6CA visual=class italic bold dashed
#.typeclasses: fill=#64B5F6 visual=database bold
#arrowSize: 1
#bendSize: 0.3
#fill: #64B5F6
#font: Menlo
#fontSize: 10
#lineWidth: 2
#padding: 8
#zoom: 1
[<typeclasses>Invariant]<-[<typeclasses>Contravariant]
[<typeclasses>ApplicativeError]<-[<instances>ApplicativeError Instances|EitherApplicativeErrorInstance|OptionApplicativeErrorInstance|TryApplicativeErrorInstance]
[<typeclasses>ApplicativeError]<-[<typeclasses>MonadError]
[<typeclasses>Applicative]<-[<instances>Applicative Instances|ConstApplicativeInstance|EitherApplicativeInstance|EvalApplicativeInstance|Function0ApplicativeInstance|Function1ApplicativeInstance|IdApplicativeInstance|OptionApplicativeInstance|TryApplicativeInstance|Tuple2ApplicativeInstance]
[<typeclasses>Applicative]<-[<typeclasses>ApplicativeError]
[<typeclasses>Applicative]<-[<typeclasses>Monad]
[<typeclasses>Bifunctor]<-[<instances>Bifunctor Instances|EitherBifunctorInstance|Tuple2BifunctorInstance]
[<typeclasses>Bimonad]<-[<instances>Bimonad Instances|EvalBimonadInstance|Function0BimonadInstance|IdBimonadInstance]
[<typeclasses>Comonad]<-[<instances>Comonad Instances|EvalComonadInstance|Function0ComonadInstance|IdComonadInstance|Tuple2ComonadInstance]
[<typeclasses>Comonad]<-[<typeclasses>Bimonad]
[<typeclasses>Eq]<-[<instances>Eq Instances|ConstEqInstance|EitherEqInstance|IdEqInstance|OptionEqInstance|TryEqInstance|Tuple10EqInstance|Tuple2EqInstance|Tuple3EqInstance|Tuple4EqInstance|Tuple5EqInstance|Tuple6EqInstance|Tuple7EqInstance|Tuple8EqInstance|Tuple9EqInstance]
[<typeclasses>Foldable]<-[<instances>Foldable Instances|ConstFoldableInstance|EitherFoldableInstance|IdFoldableInstance|OptionFoldableInstance|TryFoldableInstance|Tuple2FoldableInstance]
[<typeclasses>Foldable]<-[<typeclasses>Traverse]
[<typeclasses>Functor]<-[<instances>Functor Instances|ConstFunctorInstance|EitherFunctorInstance|EvalFunctorInstance|Function0FunctorInstance|Function1FunctorInstance|IdFunctorInstance|OptionFunctorInstance|TryFunctorInstance|Tuple2FunctorInstance]
[<typeclasses>Functor]<-[<typeclasses>Applicative]
[<typeclasses>Functor]<-[<typeclasses>Comonad]
[<typeclasses>Functor]<-[<typeclasses>Traverse]
[<typeclasses>Invariant]<-[<typeclasses>Functor]
[<typeclasses>MonadError]<-[<instances>MonadError Instances|EitherMonadErrorInstance|OptionMonadErrorInstance|TryMonadErrorInstance]
[<typeclasses>Monad]<-[<instances>Monad Instances|EitherMonadInstance|EvalMonadInstance|Function0MonadInstance|Function1MonadInstance|IdMonadInstance|OptionMonadInstance|TryMonadInstance|Tuple2MonadInstance]
[<typeclasses>Monad]<-[<typeclasses>Bimonad]
[<typeclasses>Monad]<-[<typeclasses>MonadError]
[<typeclasses>Monoid]<-[<instances>Monoid Instances|ConstMonoidInstance|EitherMonoidInstance|OptionMonoidInstance|TryMonoidInstance|Tuple2MonoidInstance]
[<typeclasses>Profunctor]<-[<instances>Profunctor Instances|Function1ProfunctorInstance]
[<typeclasses>SemigroupK]<-[<instances>SemigroupK Instances|EitherSemigroupKInstance]
[<typeclasses>Semigroup]<-[<instances>Semigroup Instances|ConstSemigroupInstance|EitherSemigroupInstance|OptionSemigroupInstance|TrySemigroupInstance]
[<typeclasses>Semigroup]<-[<typeclasses>Monoid]
[<typeclasses>Show]<-[<instances>Show Instances|ConstShowInstance|EitherShowInstance|IdShowInstance|OptionShowInstance|TryShowInstance|Tuple10ShowInstance|Tuple2ShowInstance|Tuple3ShowInstance|Tuple4ShowInstance|Tuple5ShowInstance|Tuple6ShowInstance|Tuple7ShowInstance|Tuple8ShowInstance|Tuple9ShowInstance]
[<typeclasses>Traverse]<-[<instances>Traverse Instances|ConstTraverseInstance|EitherTraverseInstance|IdTraverseInstance|OptionTraverseInstance|TryTraverseInstance|Tuple2TraverseInstance]
[<typeclasses>Contravariant]<-[<instances>Contravariant Instances|ShowContravariantInstance|ConstContravariant|Function1ContravariantInstance]
[<typeclasses>Invariant]<-[<instances>Invariant Instances|MonoidInvariantInstance|ConstInvariant]